name: academic-annotation-platform
region: nyc1
envs:
- key: NODE_ENV
  value: production
- key: PYTHON_ENV
  value: production
- key: DATABASE_URL
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: SECRET_KEY
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: REDIS_URL
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: ALLOWED_ORIGINS
  value: "https://academic-annotation-platform.ondigitalocean.app"
- key: DEBUG
  value: "false"
- key: HOST
  value: "0.0.0.0"
- key: PORT
  value: "8000"
- key: UPLOAD_DIR
  value: "/tmp/uploads"
- key: EXPORT_DIR
  value: "/tmp/exports"

databases:
- name: annotation-db
  engine: PG
  version: "15"
  size: basic-xxs
  num_nodes: 1

services:
# Python FastAPI Backend Service
- name: backend-api
  source_dir: /
  github:
    repo: # Your repository here
    branch: main
    deploy_on_push: true
  run_command: uvicorn src.main:app --host 0.0.0.0 --port 8000
  build_command: pip install -r requirements.txt && python -m src.main
  environment_slug: python
  instance_count: 1
  instance_size_slug: basic-xxs
  envs:
  - key: DATABASE_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: SECRET_KEY
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: REDIS_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: ALLOWED_ORIGINS
    value: "https://academic-annotation-platform.ondigitalocean.app"
  - key: DEBUG
    value: "false"
  - key: HOST
    value: "0.0.0.0"
  - key: PORT
    value: "8000"
  - key: UPLOAD_DIR
    value: "/tmp/uploads"
  - key: EXPORT_DIR
    value: "/tmp/exports"
  health_check:
    http_path: /health
    initial_delay_seconds: 30
    period_seconds: 30
    timeout_seconds: 10
    success_threshold: 1
    failure_threshold: 3
  http_port: 8000
  routes:
  - path: /api
  - path: /health
  - path: /docs

# Node.js WebSocket Service (for real-time features)
- name: websocket-server
  source_dir: /config/websocket
  github:
    repo: # Your repository here
    branch: main
    deploy_on_push: true
  run_command: node server.js
  build_command: npm install
  environment_slug: node-js
  instance_count: 1
  instance_size_slug: basic-xxs
  envs:
  - key: NODE_ENV
    value: production
  - key: PORT
    value: "3001"
  - key: BACKEND_URL
    value: "https://academic-annotation-platform.ondigitalocean.app/api"
  - key: REDIS_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  health_check:
    http_path: /health
    initial_delay_seconds: 30
    period_seconds: 30
    timeout_seconds: 10
    success_threshold: 1
    failure_threshold: 3
  http_port: 3001
  routes:
  - path: /ws

# React Frontend Static Site
static_sites:
- name: frontend
  source_dir: /frontend
  github:
    repo: # Your repository here
    branch: main
    deploy_on_push: true
  build_command: npm install && npm run build
  output_dir: /dist
  index_document: index.html
  error_document: index.html
  envs:
  - key: VITE_API_URL
    value: "https://academic-annotation-platform.ondigitalocean.app/api"
  - key: VITE_WS_URL
    value: "https://academic-annotation-platform.ondigitalocean.app/ws"
  - key: NODE_ENV
    value: production
  routes:
  - path: /
  catchall_document: index.html

# Redis for caching and WebSocket sessions
workers:
- name: cache-worker
  source_dir: /
  github:
    repo: # Your repository here
    branch: main
  run_command: python -m src.utils.cache_worker
  build_command: pip install -r requirements.txt
  environment_slug: python
  instance_count: 1
  instance_size_slug: basic-xxs
  envs:
  - key: REDIS_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET
  - key: DATABASE_URL
    scope: RUN_AND_BUILD_TIME
    type: SECRET