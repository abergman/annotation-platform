[tool:pytest]
# Pytest Configuration for Text Annotation System

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Minimum version
minversion = 7.0

# Addopts - default command line options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:tests/coverage_html
    --cov-report=term-missing
    --cov-report=xml:tests/coverage.xml
    --cov-fail-under=85
    --maxfail=5
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests - test individual components in isolation
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - test complete user workflows
    performance: Performance tests - test system performance
    security: Security tests - test authentication and authorization
    database: Database tests - test database operations
    api: API tests - test REST endpoints
    slow: Slow running tests
    auth: Authentication related tests
    export: Export functionality tests
    upload: File upload tests

# Asyncio configuration
asyncio_mode = auto

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */migrations/*
    */venv/*
    */__pycache__/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = tests/coverage_html

[coverage:xml]
output = tests/coverage.xml