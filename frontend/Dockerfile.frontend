# Frontend Static Site Dockerfile
# Optimized for Digital Ocean App Platform static sites

FROM node:18-alpine AS builder

# Install additional tools and libc6-compat for better Alpine compatibility
RUN apk add --no-cache python3 make g++ libc6-compat

# Set working directory
WORKDIR /app/frontend

# Set Node environment
ENV NODE_ENV=production
ENV CI=true
ENV VITE_NODE_ENV=production

# Copy package files
COPY package*.json ./

# Clean install with platform-specific settings
RUN npm ci --only=production=false --platform=linux --arch=x64

# Copy source code
COPY . .

# Build the application with explicit command
RUN npx vite build --mode production

# Production stage with nginx
FROM nginx:alpine AS production

# Copy built app from builder stage
COPY --from=builder /app/frontend/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create nginx user and set permissions
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001 -G nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Switch to non-root user
USER nginx

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]