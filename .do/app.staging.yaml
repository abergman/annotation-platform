# Digital Ocean App Platform Configuration
# Staging environment for annotat.ee

name: annotation-platform-staging
region: nyc1

domains:
  - domain: staging.annotat.ee
    type: PRIMARY
    minimum_tls_version: "1.2"

services:
  # Main Node.js application
  - name: api
    source_dir: /
    dockerfile_path: Dockerfile.production
    github:
      repo: annotation-platform
      branch: main
      deploy_on_push: true
    
    instance_count: 1
    instance_size_slug: basic-xxs
    
    # Environment variables
    envs:
      - key: NODE_ENV
        value: staging
      - key: PORT
        value: "8080"
      - key: HOST
        value: "0.0.0.0"
      - key: DOMAIN
        value: staging.annotat.ee
      - key: SSL_ENABLED
        value: "true"
      - key: LOG_LEVEL
        value: debug
      - key: DEBUG
        value: "annotation:*"
      - key: SESSION_SECRET
        scope: RUN_TIME
        type: SECRET
      - key: JWT_SECRET
        scope: RUN_TIME
        type: SECRET
      - key: MONGODB_URI
        scope: RUN_TIME
        type: SECRET
      - key: REDIS_URL
        scope: RUN_TIME
        type: SECRET
      - key: EMAIL_SMTP_HOST
        scope: RUN_TIME
        type: SECRET
      - key: EMAIL_SMTP_USER
        scope: RUN_TIME
        type: SECRET
      - key: EMAIL_SMTP_PASS
        scope: RUN_TIME
        type: SECRET
      - key: STORAGE_ACCESS_KEY
        scope: RUN_TIME
        type: SECRET
      - key: STORAGE_SECRET_KEY
        scope: RUN_TIME
        type: SECRET
    
    # HTTP configuration
    http_port: 8080
    
    routes:
      - path: /
    
    # Health check
    health_check:
      http_path: /health
      initial_delay_seconds: 15
      period_seconds: 30
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3
    
    # Resource limits
    cpu_kind: shared

  # WebSocket service
  - name: websocket
    source_dir: /
    dockerfile_path: Dockerfile.websocket
    github:
      repo: annotation-platform
      branch: main
      deploy_on_push: true
    
    instance_count: 1
    instance_size_slug: basic-xxs
    
    envs:
      - key: NODE_ENV
        value: staging
      - key: WS_PORT
        value: "8081"
      - key: REDIS_URL
        scope: RUN_TIME
        type: SECRET
      - key: CORS_ORIGIN
        value: https://staging.annotat.ee
      - key: JWT_SECRET
        scope: RUN_TIME
        type: SECRET
      - key: LOG_LEVEL
        value: debug
    
    http_port: 8081
    
    routes:
      - path: /socket.io
    
    health_check:
      http_path: /health
      initial_delay_seconds: 20
      period_seconds: 30
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3

# Database (MongoDB) - Smaller for staging
databases:
  - name: annotation-staging-db
    engine: MONGODB
    version: "6"
    size: basic-xs
    num_nodes: 1

# Jobs (less frequent in staging)
jobs:
  - name: staging-cleanup
    source_dir: /
    dockerfile_path: Dockerfile.production
    github:
      repo: annotation-platform
      branch: main
    
    kind: CRON
    schedule: "0 4 * * 0"  # Weekly on Sunday at 4 AM
    
    envs:
      - key: NODE_ENV
        value: staging
      - key: JOB_TYPE
        value: cleanup
      - key: MONGODB_URI
        scope: RUN_TIME
        type: SECRET
    
    run_command: node scripts/cleanup.js

# Alerts (reduced for staging)
alerts:
  - rule: DEPLOYMENT_FAILED
    disabled: false
    
  - rule: DOMAIN_FAILED
    disabled: false

# Features
features:
  - buildpack-stack: ubuntu-22

# Ingress rules
ingress:
  load_balancer: ROUND_ROBIN
  
  # Security headers (same as production)
  headers:
    - name: X-Frame-Options
      value: DENY
    - name: X-Content-Type-Options
      value: nosniff
    - name: X-XSS-Protection
      value: "1; mode=block"
    - name: Strict-Transport-Security
      value: "max-age=31536000; includeSubDomains"
    - name: Content-Security-Policy
      value: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss: ws:;"
    - name: Referrer-Policy
      value: strict-origin-when-cross-origin
  
  # Less strict rate limiting for testing
  rules:
    - component_name: api
      match:
        path:
          prefix: "/api/"
      action:
        rate_limit:
          requests_per_minute: 120
    
    - component_name: api
      match:
        path:
          prefix: "/auth/"
      action:
        rate_limit:
          requests_per_minute: 20